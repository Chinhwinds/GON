import { useState } from 'react';
import { Link } from 'react-router-dom';
import { cards } from '../data/cards';

const CardList = () => {
    const [filter, setFilter] = useState('all');
    const [searchTerm, setSearchTerm] = useState('');

    const filteredCards = cards.filter(card => {
        const matchesFilter = filter === 'all' || card.type === filter;
        const matchesSearch = card.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
            card.description.toLowerCase().includes(searchTerm.toLowerCase());
        return matchesFilter && matchesSearch;
    });

    const getTypeIcon = (type: string) => {
        switch (type) {
            case 'B·∫£o V·ªá': return 'üõ°Ô∏è';
            case 'C·ªông ƒê·ªìng': return 'üë•';
            case 'Thi√™n Tai': return 'üå™Ô∏è';
            default: return 'üÉè';
        }
    };

    const getTypeBadge = (type: string) => {
        switch (type) {
            case 'B·∫£o V·ªá': return 'bg-success';
            case 'C·ªông ƒê·ªìng': return 'bg-info';
            case 'Thi√™n Tai': return 'bg-danger';
            default: return 'bg-secondary';
        }
    };

    return (
        <div className="container py-5">
            <div className="row">
                <div className="col-12">
                    <h1 className="display-4 fw-bold text-center mb-5">B·ªô s∆∞u t·∫≠p th·∫ª</h1>

                    {/* Search and Filter */}
                    <div className="row mb-4">
                        <div className="col-md-6 mb-3">
                            <input
                                type="text"
                                className="form-control"
                                placeholder="T√¨m ki·∫øm th·∫ª..."
                                value={searchTerm}
                                onChange={(e) => setSearchTerm(e.target.value)}
                            />
                        </div>
                        <div className="col-md-6 mb-3">
                            <select
                                className="form-select"
                                value={filter}
                                onChange={(e) => setFilter(e.target.value)}
                            >
                                <option value="all">T·∫•t c·∫£ lo·∫°i th·∫ª</option>
                                <option value="B·∫£o V·ªá">Th·∫ª B·∫£o V·ªá</option>
                                <option value="C·ªông ƒê·ªìng">Th·∫ª C·ªông ƒê·ªìng</option>
                                <option value="Thi√™n Tai">Th·∫ª Thi√™n Tai</option>
                            </select>
                        </div>
                    </div>

                    {/* Results count */}
                    <div className="mb-4">
                        <p className="text-muted">
                            Hi·ªÉn th·ªã {filteredCards.length} th·∫ª {filter !== 'all' ? `(${filter})` : ''}
                        </p>
                    </div>

                    {/* Cards Grid */}
                    <div className="row g-4">
                        {filteredCards.map((card) => (
                            <div key={card.id} className="col-lg-4 col-md-6">
                                <div className="card h-100 shadow-sm hover-lift">
                                    <div className="card-body p-4">
                                        <div className="d-flex justify-content-between align-items-start mb-3">
                                            <div className="display-6">{getTypeIcon(card.type)}</div>
                                            <span className={`badge ${getTypeBadge(card.type)}`}>
                                                {card.type}
                                            </span>
                                        </div>

                                        <h5 className="card-title fw-bold mb-2">{card.name}</h5>
                                        <p className="card-text text-muted small mb-3">
                                            {card.description}
                                        </p>

                                        <div className="d-flex justify-content-between align-items-center">
                                            <small className="text-muted">ID: {card.id}</small>
                                            <Link
                                                to={`/card/${card.id}`}
                                                className="btn btn-outline-success btn-sm"
                                            >
                                                Xem chi ti·∫øt
                                            </Link>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>

                    {filteredCards.length === 0 && (
                        <div className="text-center py-5">
                            <div className="display-4 text-muted mb-3">üîç</div>
                            <h4>Kh√¥ng t√¨m th·∫•y th·∫ª</h4>
                            <p className="text-muted">Th·ª≠ thay ƒë·ªïi b·ªô l·ªçc ho·∫∑c t·ª´ kh√≥a t√¨m ki·∫øm</p>
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
};

export default CardList; 